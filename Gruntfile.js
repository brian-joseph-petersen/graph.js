module.exports = function ( grunt ) {
    var config = { pkg: grunt.file.readJSON( "package.json" ) };
    config.concat = { options: {}, grunt: { src: [] } };
    config.jshint = { options: {}, grunt: {} };
    config.uglify = { options: {}, grunt: {} };
    config.concat.options.banner = "!function(){\n";
    config.concat.options.footer = "\n}();";
    config.concat.grunt.src.push( "src/prototypeof.js" );
    config.concat.grunt.src.push( "src/round.js" );
    config.concat.grunt.src.push( "src/graph.js" );
    config.concat.grunt.src.push( "src/render.js" );
    config.concat.grunt.dest = "graph.js";
    config.jshint.grunt.src = "graph.js";
    config.uglify.grunt.src = "graph.js";
    config.uglify.grunt.dest = "graph.js";
    config.jshint.options.indent = 4;
    config.jshint.options.browser = true;
    config.jshint.options.eqeqeq = true;
    config.jshint.options.expr = true;
    config.jshint.options.latedef = true;
    config.jshint.options.undef = true;
    config.jshint.options.unused = true;
    config.uglify.options.compress = true;
    config.uglify.options.mangle = true;
    grunt.initConfig( config );
    grunt.loadNpmTasks( "grunt-contrib-concat" );
    grunt.loadNpmTasks( "grunt-contrib-jshint" );
    grunt.loadNpmTasks( "grunt-contrib-uglify" );
    grunt.registerTask( "default", [ "concat:grunt", "jshint:grunt", "uglify:grunt" ] );
};